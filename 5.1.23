class Solution(object):
    def diagonalSum(self, mat):
        n=len(mat)
        sum=0
        for i in range(n):
            for j in range(n):
                if i==j:
                    sum=sum+mat[i][j]
                elif i+j==n-1:
                    sum=sum+mat[i][j]
        return sum
        
n=int(input())
a=[]
z=[]
for i in range(0,n):
    l=[]
    for j in range(0,n):
        x=int(input())
        l.append(x)
    a.append(l)
for i in range(0,n):
    for j in range(0,n):
        if i==j:
            print(a[i][j])

for i in range(0,n):
    for j in range(0,n):
        if i+j==n-1:
            print(a[i][j])
for i in range(0,n):
    for j in range(0,n):
        z.append(a[i][j])
print(max(z))


n=int(input())
m=[]
c=0
for i in range(0,n):
    l=[]
    for j in range(0,n):
        x=float(input())
        l.append(x)
    m.append(l)
for i in range(0,n):
    sum=0
    for j in range(0,n):
        sum=sum+m[i][j]
    if sum==2:
        c=c+1
if c==3:
    print('Coder target matrix')
else:
    print('Not Coder target matrix')
